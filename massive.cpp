#include <cmath> //математические функции
#include <stdlib.h> //вставляем код для случайных чисел
#include <iostream> //Вставляем код стандартной библиотеки ввода и ввывода
#include "massive.h"//Заголовочный файл собственных функций
#include <fstream> // Вставляем код для работы с файлами



///Получение суммы массива в квадрате размерность n возвращает сумму элементов sum
int sum_mas (int* a, int n){

int sum = 0;

	for (unsigned i = 0; i < n; i++) // цикл получения суммы элементов массива в квадрате
		
	 sum = pow(a[i],2) + sum;  //Сложение элементов в квадрате

return sum;

}

///Заполнение массива размерностью n случайными числами от min до max
int* fill_mas(int n, int max, int min){

	int *a = new int [n]; //выделение памяти для массива размерностью n

	for (unsigned i = 0; i < n; i++) // цикл заполнения

		a[i] = min + rand() % (max + min + 1); //Заполнение элемента массива случаным числом по формуле

	return a; //Возвращает адрес на массив

}

///Вывода массива размерностью n 
void Output_mas(int *a, int n){

	for (unsigned i = 0; i < n; i++) // цикл вывода элементов

		cout << "a[" << i <<"]" << " = " << a[i] << endl;

}

///Вывод массива в файл с название name
void Input_mass_file(int* a, int n, const string& name){

	int i;

	ofstream f; //Создаем объект для записи в файл

	f.open(name);//открытие файла для работы

	if (f.is_open()) //проверка открылся ли файл
	{

	f << n; //запись размерности массива
	f << endl;//отделение от элементов

	for (unsigned i = 0; i < n; i++){

	f << a[i]; //запись в строку элемента массива

	f << "\n"; // переход на новую строку

	}

	}

	else 

	cout << " File not written! " ; //если файл не открылся выводит на экран пользователю сообщение об ошибке

	f.close(); // закрывает файл

}

///Создание массива через файл с названием name
int* Create_mass_file(const string& name){

	int i,n; //создаю переменные для работы

	int* a = nullptr; // создание указателя на начало динамического массива

	ifstream f; //Создаем объект для записи в файл

	f.open(name); //открываю файл 

	if (f.is_open()) // проверяю файл открывается ли он
	{

	f >> n; //получения размерности массива

	a = new int[n]; //выделение памяти

	for (unsigned i = 0; i < n; i++)
	{

		f >> a[i]; // запись элементов массива из файла

	}

	}

			else

				cout << "file not reading!"; // если файл не открылся выводит пользователю сообщение об ошибке

	f.close(); //закрываю файл

	return a; // возвращаю указатель на массив

}



