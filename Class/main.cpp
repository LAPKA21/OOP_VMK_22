#include <iostream>
#include <cassert>
#include "country_house.h"
#include <vector>
#include <fstream>


//TODO RENAME FILE
using namespace std;

int main() {

	//Тестовая часть 

	//создаем объекты для тестов
	CountryHouse test1(515.3,6,600.3);
	CountryHouse test2(51,4,200);
	CountryHouse test3(54.6,2,65);

	//тест всех методов класса
	assert((test1.price_house() - 309334.59) < 0.000000001); //проверяет метод рассчета стоимости дома из его площади и стоимости квадратного метра 
	assert((test1.get_count_r() - 6) == 0); // данный тест проверяет правильно ли выводятся ланные пользователю после ввода количества комнат
	assert((test1.get_sq() - 515.3) == 0); // данный тест проверяет правильно ли выводятся ланные пользователю после ввода площади дома
	assert((test1.get_val_sq_m() - 600.3) < 0); //данный тест проверяет правильно ли выводятся ланные пользователю после ввода стоимости квадратного метра
	assert((test1.to_string() == "Площадь дома = 515.300000  Количество комнат = 6  Стоимость за квадратный метр = 600.300000  Стоимость дома = 309334.590000")); //проверяет правильный ввыод строки 

	assert((test2.price_house() - 10200) < 0.000000001);
	assert((test2.get_count_r() - 4) == 0); // данный тест проверяет правильно ли выводятся ланные пользователю после ввода количества комнат
	assert((test2.get_sq() - 51) == 0); // данный тест проверяет правильно ли выводятся ланные пользователю после ввода площади дома
	assert((test2.get_val_sq_m() - 200) == 0); //данный тест проверяет правильно ли выводятся ланные пользователю после ввода стоимости квадратного метра
	assert((test2.to_string() == "Площадь дома = 51.000000  Количество комнат = 4  Стоимость за квадратный метр = 200.000000  Стоимость дома = 10200.000000")); //проверяет правильный ввыод строки 


	assert((test3.price_house() - 3549) < 0.000000001);
	assert((test3.get_count_r() - 2) == 0); // данный тест проверяет правильно ли выводятся ланные пользователю после ввода количества комнат
	assert((test3.get_sq() - 54.6) == 0); // данный тест проверяет правильно ли выводятся ланные пользователю после ввода площади дома
	assert((test3.get_val_sq_m() - 65) == 0); //данный тест проверяет правильно ли выводятся ланные пользователю после ввода стоимости квадратного метра
	assert((test3.to_string() == "Площадь дома = 54.600000  Количество комнат = 2  Стоимость за квадратный метр = 65.000000  Стоимость дома = 3549.000000")); //проверяет правильный ввыод строки 



	//Основной код программы

	setlocale(LC_ALL, "Russian");

	CountryHouse a,b; //Создаем обьект (экземпляр класса) имени a,b
	double s,v; // s - переменная отвечающая за площадь, v -стоимость квадратного метра
	int r,n,t; //r - кол, n - размер массива
	std::string str, strv, filename; //строки и переменная отвечающая за имя файла - filename
	std::vector<CountryHouse*> vec; //вектор указателей на обьектов
	CountryHouse * statmas; //массив обьектов

	cout << "Введите площадь (Площадь > 0) = ";
	cin >> s;

	cout << "Введите количество комнат (количество комнат > 0) = " ;
	cin >> r;

	cout << "Введите стоимость квадратного метра ( стоимость квадратного метра > 0) = ";
	cin >> v;

	//cout << "Введите количество элементов вектора = ";
	//cin >> n;

	n = 6;

	try {

		//пример с обьектом
		a.set_sq(s);
		a.set_count_r(r);
		a.set_val_sq_m(v);
		cout << "Площадь дома = " << a.get_sq() << endl;
		cout << "Количество комнат = " << a.get_count_r() << endl;
		cout << "Стоимость дома = " << a.price_house() << endl;
		cout << endl;
		str = a.to_string();
		cout << str;
		cout << endl;
		cout << endl;

		//пример с массивом из объектов
		statmas = new CountryHouse[n]; //массив обьектов
		for (int i = 0; i < n; i++) {
			statmas[i].set_count_r(i + 15);
			statmas[i].set_sq(i * 11 + 1);
			statmas[i].set_val_sq_m(i * 100 + 1 + 2 + 3);
		}
		for (int i = 0; i < n; i++) {
			cout << "Комнат = " << statmas[i].get_count_r() << endl;
			cout << "Площадь = " << statmas[i].get_sq() << endl;
			cout << "Стоимость квадратного метра = " << statmas[i].get_val_sq_m() << endl;
			cout << endl;
		}

		delete[] statmas;// освобождение памяти массива обьек
		cout << endl;
		cout << endl;
		cout << endl;

		//пример с массивом из указателей
		CountryHouse* abc[6]; //массив указателей на объекты
		for (int i = 0; i < n; i++)
			abc[i] = new CountryHouse; //выделение памяти под обьекты типа класса

		for (int i = 0; i < n; i++) {
			abc[i]->set_count_r(i + 1);
			abc[i]->set_sq(i * 10 + 1);
			abc[i]->set_val_sq_m(i * 10 + 1 + 2 + 3);
		}

		for (int i = 0; i < n; i++) {
			cout << "Комнат = " << abc[i]->get_count_r() << endl;
			cout << "Площадь = " << abc[i]->get_sq() << endl;
			cout << "Стоимость квадратного метра = " << abc[i]->get_val_sq_m() << endl;
			cout << endl;
		}

		cout << endl;
		cout << endl;

		vec.push_back(abc[0]);
		strv = vec[0]->to_string();
		cout << endl;
		cout << strv;

		vec.clear(); // очистка памяти от вектора
		
		//освобождение памяти из под массива указателей на объекты
		for (int i = 0; i < n; i++)
			delete abc[i];


		//пример работы с файлами и обьектами 
		cin >> filename; // пользователь вводит имя файла

		//вывод
		std::ofstream out; //определение потока вывода в файл
		out.open(filename); //открытие файла
		if (out.is_open()) {  //проверка открытия
			out << a.get_sq() << endl; //вывод поля объекта площади в файл с названием filename
			out << a.get_count_r() << endl; //вывод поля количества комнат в файл с названием filename
			out << a.get_val_sq_m() << endl;//вывод поля стоимости квадртаного метра в файл с названием filename
		}
		out.close();//закрытие файла

		//ввод
		//создаем переменные для записи в объект 
		double file_sq, file_sq_val_m; //площадь - file_sq , стоимость квадратного метра - file_sq_val_m
		int file_c_r; // количество комнат - file_c_r
		std::ifstream in; //поток на ввод
		in.open(filename); //открытие файла
		if (in.is_open()) { //проверка открытия файла
			in >>  file_sq; //запись площади в переменную
			in >> file_c_r; //запись количества комнат в переменную
			in >> file_sq_val_m; // запись стоимости квадртаного метра в переменную
			b.set_sq(file_sq);//запись в поля объекта
			b.set_count_r(file_c_r); //запись в поле объекта
			b.set_val_sq_m(file_sq_val_m);// запись в поле объекта

		}
		in.close(); //закрыли в файл
		cout << b.get_sq() << " " << b.get_count_r() << " " << b.get_val_sq_m() << endl; //выводим для проверки

		
	}
	catch (exception& err) {

		cout << " Ошибка неверное значение --- " << err.what();
		return -1;
	}

	
}
